"""
<Program Name>
  friend.r2py

<Started>
  Sep 17, 2014

<Author>
  Yanyan Zhuang

<Purpose>
  A friend node reports availability to a server.
"""

dy_import_module_symbols("random.r2py")
time = dy_import_module("time.r2py")

def friend_init():
  """
  Initialized the node with its unique random string.
  """
  filename = FRIENDS_IDFILE
  nodeid = ""
  
  if filename not in listfiles():  
    # ID file not exist
    nodeid = random_nbit_int(ID_LENGTH)
    filefd = openfile(filename, True)
    filefd.writeat(str(nodeid), 0) 
    filefd.close()
  else: 
    # ID file exists
    filefd = openfile(filename, False)
    nodeid = filefd.readat(None, 0)
    filefd.close()
    
  # need to get the base time from NTP so we know how to calculate the offset...
  while True:
    try:
      time.time_updatetime(63105)
    except SocketWouldBlockError:
      sleep(5)
      log('failed to update time, retrying...\n')
    else:
      break

  return nodeid


def main():
  """
  Main program: connect to a server.
  """
  
  myid = friend_init()
  log('finished initialization\n')

  candidate_port_list = list(getresources()[0]['connport'])
  currentcandidate_port = candidate_port_list.pop()

  # open a connection to the remote server, send my info, and then sleep 5 mins (if successful)
  while True:
    # handle the (very unlikely) situation where I have tried all local ports and found them in use.
    if candidate_port_list == []:
      candidate_port_list = list(getresources()[0]['connport'])
        
    try:
      myip=getmyip()
      serversocket = openconnection(DEST_IP, DEST_PORT, myip, 63104, OPENCONN_TIMEOUT)
    except DuplicateTupleError:
      # CHOOSE A NEW CANDIDATE PORT IF IN USE...
      currentcandidate_port = candidate_port_list.pop()
      log("The (ip, port) tuple is already used.  Moving to port",currentcandidate_port,"\n")
      continue
    except ConnectionRefusedError:
      log("The server is not listening. Retry after 5 sec.\n")
      sleep(5)
      continue
    except TimeoutError:  
      log("Connection timed out after " + str(OPENCONN_TIMEOUT) + "secs.\n")
      continue
    except InternetConnectivityError: 
      log("The network is down.\n")
      sleep(5)
      continue
    except CleanupInProgressError:
      log("The (ip, port) tuple is still being cleaned up by the OS.\n")
      sleep(20)
      continue
      
    # we've connected, send a message and disconnect...
    messagetosend = str(myid) + '\t' + myip
      for attempt in range(3):
        try:
          serversocket.send(messagetosendg)
        except SocketWouldBlockError:
          sleep(1)
        except SocketClosedLocal:
          log("Local socket closed or remote server down.\n")
          break
        except SocketClosedRemote:
          log("Local socket closed or remote server down.\n")
          break
        else:
          # success!  Log this...
          timestring = str(time.time_gettime())
          log(timestring + ' friend ' + str(myid) + ' reported to server at ' + myip + '..\n')
      else:
        log('Tried 3 times to send and it blocked each time.  Aborting this connection!\n')
    finally:
      serversocket.close()
      # wait for 5 mins and try again...
      sleep(5*60)  

    
  

############ main program ############  
FRIENDS_IDFILE = "friendsid"  # file that stores the unique ID of a node
ID_LENGTH = 8  # length of the node ID

DEST_IP = '198.162.52.146' # IP of kramer.nss.cs.ubc.ca
DEST_PORT = 63109
OPENCONN_TIMEOUT = 5  # secs before openconnection times out

main()
