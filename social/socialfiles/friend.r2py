"""
<Program Name>
  friend.r2py

<Started>
  Sep 17, 2014

<Author>
  Yanyan Zhuang

<Purpose>
  A friend node reports availability to a server.
"""

dy_import_module_symbols("random.r2py")


def friend_init():
  """
  Initialized the node with its unique random string.
  """
  filename = FRIENDS_IDFILE
  nodeid = ""
  
  if filename not in listfiles():  
    # ID file not exist
    nodeid = random_nbit_int(ID_LENGTH)
    filefd = openfile(filename, True)
    filefd.writeat(str(nodeid), 0)
    filefd.close()
  else: 
    # ID file exists
    filefd = openfile(filename, False)
    nodeid = filefd.readat(None, 0)
    filefd.close()
    
  return nodeid


def main():
  """
  Main program: connect to a server.
  """
  
  myid = friend_init()

  # open a connection to the remote server
  myip = getmyip()
  sendstring = str(myid) + '\t' + myip
  serversocket = None

  while True:
    try:
      serversocket = openconnection(DEST_IP, DEST_PORT, myip, 12345, OPENCONN_TIMEOUT)
    except ConnectionRefusedError:
      log("The server is not listening. Retry after 5 sec.\n")
      sleep(5)
      continue
    except TimeoutError:  
      log("Connection timed out after " + str(OPENCONN_TIMEOUT) + "secs.\n")
      continue
    except InternetConnectivityError: 
      log("The network is down.\n")
      continue
    except DuplicateTupleError:
      log("The (ip, port) tuple is already used.\n")
    except CleanupInProgressError:
      log("The (ip, port) tuple is still being cleaned up by the OS.\n")
      sleep(20)
      continue

    if serversocket != None:
      try:
        serversocket.send(sendstring)
        log('friend ' + str(myid) + ' reporting to server at ' + myip + '..\n')
        serversocket.close() 
        sleep(5)   # TODO: change this to every 5min
      except SocketWouldBlockError:
        pass
      except SocketClosedLocal:
        log("Local socket closed or remote server down.\n")
  

############ main program ############  
FRIENDS_IDFILE = "friendsid"  # file that stores the unique ID of a node
ID_LENGTH = 8  # length of the node ID

DEST_IP = '198.162.52.146' # IP of kramer.nss.cs.ubc.ca
DEST_PORT = 63109
OPENCONN_TIMEOUT = 5  # secs before openconnection times out

main()
