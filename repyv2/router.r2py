"""
<Program Name>
  router.r2py

<Started>
  July 24, 2014

<Author>
  Yanyan Zhuang

<Purpose>
  Router as the data sender, for the use case of rate adaptation.
"""

############ define protocol parameters ############ 
LENGTH = 9000    # packet length (change for different tx rates)
SEQ = 0          # sequence number of packets


def getlocalipport():
  localip = getmyip()
  localport = 63100
  return (localip, localport)


def getdestipport():
  destip = getmyip()  # this needs to be changed to phone's IP
  destport = 63101
  return (destip, destport)


def sendpause(SEQ, duration):
  packet = [SEQ, 'PAUSE']
  sequence.append(SEQ)
  sendmessage(destip, destport, str(packet), localip, localport)
  SEQ = SEQ + 1
  sleep(duration)
  

def translatemessage(message):
  message = message.strip('(').strip(')')
  seqlist, move = message.split('],')
  seqs = seqlist.strip('[').split(',')
  rcvseqs = []
  
  for seq in seqs:
    seq = int(seq)
    rcvseqs.append(seq)
  return (rcvseqs, move) 


def comparediff(sequence, receivedseqs):
  #log(str(sequence) + '\n')
  #log(str(receivedseqs) + '\n')
  listdiff = list(set(sequence) - set(receivedseqs))
  sentlen = len(sequence)
  recvlen = len(receivedseqs)
  difflent = sentlen - recvlen
  log("sent: " + str(sentlen) + "; received: " + 
    str(recvlen) + " diff: " + str(difflent) + '\n')
  
  lossrate = (float(difflent)/float(sentlen))*100  # percent
  return (listdiff, lossrate) 


############ main program ############ 
(localip, localport) = getlocalipport()
(destip, destport) = getdestipport()

# router's socket for client's ack
routerlistensocket = listenformessage(localip, localport)

# initial variables
starttime = getruntime()
sequence = []

while True:
  # router send a bunch of packets to the client
  packet = [SEQ, '0'*LENGTH]
  sequence.append(SEQ)  # record the sent seq
  sendmessage(destip, destport, str(packet), localip, localport)
  SEQ = SEQ + 1
  endtime = getruntime()

  if endtime - starttime >= 0.05:
    sendpause(SEQ, 1)

    try:
      # receive ack and movement hint from client
      remoteip, remoteport, message = routerlistensocket.getmessage()
      
      receivedseqs, move = translatemessage(message)

      # compare received seq with sent seq
      (diff, lossrate) = comparediff(sequence, receivedseqs)
      log("lost seqs: " + str(diff) + '; lossrate: ' + str(lossrate) + '\n')
      
      starttime = getruntime()
      sequence = []
      receivedseqs = []

    except SocketWouldBlockError:
      pass